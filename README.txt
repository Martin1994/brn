MOD制作或游戏安装前请阅读本文件

BRN是新一代的BR大逃杀页游引擎，上一代引擎是从BRU汉化来的BRA，由于代码较老，难以扩展功能，因此Martin Chloride重新制作了新引擎

=====为什么选择BRN=====
1.良好清晰的代码逻辑，修改方便
2.弹性的数据存储
3.以上是废话
4.以下是举例
5.随意设置的动态背包大小
6.全自动回血
7.任意精度的生命体力
8.全新的buff系统
9.全新的技能系统（under construction）
10.全面使用服务器推技术，让玩家实时接到消息
11.全面兼容BRA的数据文件（部分文件需要转换）
12.前后端分离，节省流量，支持多模板
13.全面使用OOP，可以非常方便的制作MOD
14.更自由的战斗计算
15.可以在mysql（PDO可用）与mongodb之间自由切换使用的数据库，后者大约可以提升20ms左右的运行时间，相当可观，如果环境允许，请务必使用
16.可以在mongodb、memcache、文件操作之间自由切换缓存方式
17.任意数量物品合成，包括同物品
18.支持团队获胜
19.灵活的buff系统

=====如何制作BRN的MOD=====
0.如果你不知道什么是OOP，请先自行补课
1.游戏由五个主要的class运作起来，分别是：game player item combat command；创建它们时请使用new_game()等函数，它们会自动创建当前mod的该类
2.他们的作用分别是：控制游戏 控制玩家 操作物品 战斗 处理玩家的命令
3.他们的基类在include/class.*.php，请仔细阅读各个函数的说明
4.请复制一份gamedata/mod/bra/，然后修改gamedata/config.php，将mod改为复制后的文件夹名字
5.请继承或重载想要修改的函数
6.include/的内容原则上不修改，当引擎更新的时候可以直接覆盖而不影响MOD的内容
7.gamedata/的内容请随意修改，当引擎更新的时候不会对其中的内容作任何更新（除非特殊说明，比如config.php有新的内容需要添加）
8.模板请随意修改
9.常用全局变量：$db 数据库；$a ajax；$c comet；$p player_console
10.判断某部位上是否有装备的方法是查看这个部位的装备名字是否为''（空字符串）
11.如果修改了包裹内容，请调用player::rearrange_package()，并向客户端发送ajax消息player::ajax('item', array('package' => $this->parse_package()))；装备区同理，具体参考源代码
12.攻防计算全部由player::calculate_battle_info()完成，当攻防可能改变时（例如卸下装备后）调用此函数可以重新计算攻防
13.新动作以command类为入口
14.为了兼容mysql和mongodb，id一律按照字符串处理，所有主键的列名都是_id

=====进阶MOD制作=====
1.MOD可以继承MOD
2.如何制作类似Death Note那样需要输入参数的物品：参照bra mod中的Death Note，使用item_param接口在客户端显示输入界面

=====玩家数据控制系统（player_console）的作用=====
1.进行数据的预处理，在存储值和显示值之间自动转换
2.脚本结束时自动更新数据库
3.重复获取同一玩家数据的情况下自动使用已有数据
4.暂不提供MOD功能
